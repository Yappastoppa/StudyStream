üèéÔ∏è GhostRacer: Feature Expansion & Implementation Prompt

Context:
GhostRacer is a privacy-focused, invite-only racing/navigation app (iOS, SwiftUI/MapKit/Mapbox). The goal is to add advanced mapping, route creation, navigation, and AI-driven suggestions for racers in New Jersey.

‚∏ª

1. Core Mapping & Navigation Features
	‚Ä¢	Interactive Map (Mapbox or MapKit):
	‚Ä¢	Allow zoom, pan, and dark/night racing theme.
	‚Ä¢	See user‚Äôs current location (and ghost mode status).
	‚Ä¢	Show nearby racers, live events, and crowdsourced alerts.
	‚Ä¢	Custom Routes & Race Segments:
	‚Ä¢	Users can draw, save, and share their favorite drives.
	‚Ä¢	AI-generated ‚Äúsuggested‚Äù race routes based on real NJ roads, low-traffic data, and past activity.
	‚Ä¢	Route overlays: Thick lines for routes, custom pins for police traps, speed cameras, fun spots.
	‚Ä¢	Allow users to drop notes/tags (‚ÄúGreat for midnight runs‚Äù, ‚ÄúWatch for potholes‚Äù).
	‚Ä¢	Navigation:
	‚Ä¢	Start Navigation button on any route (minimum: follow polyline with heading/compass; ideal: step-by-step).
	‚Ä¢	Allow users to get directions out-of-app (Apple/Google Maps fallback).
	‚Ä¢	Re-center/auto-zoom to user location, route, or alert.
	‚Ä¢	Heatmaps & Leaderboards:
	‚Ä¢	Show areas/routes with the most racing activity.
	‚Ä¢	Leaderboards: Best times, most alerts, most routes contributed.

‚∏ª

2. AI & Backend Features
	‚Ä¢	Automatic Route Suggestion:
	‚Ä¢	Use OSMnx + Python to analyze New Jersey‚Äôs open street maps for best potential ‚Äúrace routes‚Äù (criteria: low traffic, winding, low-residential).
	‚Ä¢	Generate and store routes as GeoJSON.
	‚Ä¢	Backend endpoint to serve these routes (e.g. /routes/generate, /routes/all).
	‚Ä¢	On frontend, display these AI-suggested routes on the map as overlays.
	‚Ä¢	Simulation/Fake Data:
	‚Ä¢	Add a simulation/debug flag that populates the map with ghost racers and fake alerts for UI testing.
	‚Ä¢	Crowdsourced Alerts:
	‚Ä¢	Allow users to anonymously mark hazards, police, speed traps.
	‚Ä¢	Fuzzy location (round to ~100m).
	‚Ä¢	Store in backend and display on map with time decay.

‚∏ª

3. UX & Safety
	‚Ä¢	Stealth Mode:
	‚Ä¢	App appears as ‚ÄúGPS Logger‚Äù by default.
	‚Ä¢	Unlocks via gesture or time window (as before).
	‚Ä¢	Route Notes, Ratings, and Tags:
	‚Ä¢	Users can leave tips, rate routes (‚Äúchill‚Äù, ‚Äúdanger‚Äù, ‚Äúscenic‚Äù).
	‚Ä¢	UI/UX Polish:
	‚Ä¢	Clean, bold, easy-to-use map interface for use while driving (big buttons, high contrast).

‚∏ª

4. Dev & Infra
	‚Ä¢	Backend APIs:
	‚Ä¢	/routes/generate ‚Äì POST: create AI route (NJ only, for now)
	‚Ä¢	/routes/all ‚Äì GET: all user/AI routes (GeoJSON)
	‚Ä¢	/alerts/nearby ‚Äì GET: nearby police/speed traps
	‚Ä¢	/leaderboard ‚Äì GET: rankings (fastest, most alerts, etc)
	‚Ä¢	Component Breakdown:
	‚Ä¢	MapContainer
	‚Ä¢	RaceRouteOverlay
	‚Ä¢	AlertPin
	‚Ä¢	NavigationPanel
	‚Ä¢	RouteCreator/Editor
	‚Ä¢	LeaderboardModal
	‚Ä¢	Documentation:
	‚Ä¢	How to get a Mapbox token & run OSMnx scripts.
	‚Ä¢	Security checklist: how user data is anonymized, how to wipe logs, what‚Äôs never stored.

‚∏ª

5. How to Use This Prompt
	‚Ä¢	For Developers: Use as your new requirements/roadmap.
	‚Ä¢	For AI: Feed to ChatGPT/Claude for React/Swift code, backend endpoints, OSMnx/GeoJSON scripts.
	‚Ä¢	For UI Designers: Use as a reference for wireframes/mockups.
	‚Ä¢	For Collaborators: Share for feedback/prioritization.