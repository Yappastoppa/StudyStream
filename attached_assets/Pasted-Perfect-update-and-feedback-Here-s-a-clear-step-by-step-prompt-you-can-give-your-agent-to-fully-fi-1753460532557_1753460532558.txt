Perfect update and feedback! Here’s a clear, step-by-step prompt you can give your agent to fully finish this navigation system, making sure it’s modern, high-level, and only running the new navigation UI, with live user location and driver/overview modes just like Waze. This will also remove the old nav UI and force location permission so the user can’t proceed until they share location.

⸻

Prompt for Agent:

1. Remove the Old Navigation UI Completely:
• Delete or fully disable all legacy navigation components and logic (including any leftover UI, panels, and controls).
• Make sure only the new, high-level navigation (with driver/overview mode) is running.

2. Enforce Location Permissions:
• On app start, immediately check for geolocation permission.
• If permission is denied, show a modal or overlay (not dismissible) that explains:
“This app requires your location to function. Please enable location services to continue.”
• Provide a button:
– “Enable Location” (which re-requests location via browser prompt).
• Block all map/nav functionality until permission is granted.

3. Improve Driver View and Overview Switching:
• Driver View: Zoom in, track and rotate map with user heading, and always center on user’s current GPS position.
• Overview: Zooms out, fits whole route on screen, disables auto-follow until user taps CENTER.

4. Show a Custom User Location Icon:
• Display a clear, visible user icon (using phone’s GPS location) on the map at all times.
• Update the icon in real time as GPS position updates.

5. Polish GPS Loss Handling:
• If the GPS is lost or unavailable for more than 5 seconds, show a red “Searching for GPS…” banner and pause auto-follow.
• When GPS returns, hide the banner and resume auto-follow.

6. General Polish:
• Fix the bug with the “5625518m” distance (show proper distances only, never undefined/NaN/very large numbers).
• Only display one set of navigation instructions (remove duplicates/overlays).
• Make sure speed, distance, and ETA are correct and only shown in the active nav mode.

7. Test:
• Confirm that ONLY the new navigation UI appears.
• Confirm the user is always tracked, and the driver/overview modes are smooth and bug-free.
• Confirm that the app blocks all navigation until location is granted and immediately works after user enables it.

Bonus:
– If possible, cache the last known location and show it on map load before live GPS comes in.

⸻

If you want a quick code snippet for the location modal (React):

// Show this overlay if location permission is denied or unavailable
<Modal open={showLocationModal}>
  <h2>Enable Location Services</h2>
  <p>This app requires your location to function. Please enable location services to continue.</p>
  <Button onClick={requestLocationPermission}>Enable Location</Button>
</Modal>

And for the user location icon (example with Mapbox GL):

if (userLocation) {
  map.addSource('user-location', {
    type: 'geojson',
    data: {
      type: 'Feature',
      geometry: { type: 'Point', coordinates: [userLocation.lng, userLocation.lat] }
    }
  });
  map.addLayer({
    id: 'user-location-icon',
    type: 'symbol',
    source: 'user-location',
    layout: { 'icon-image': 'custom-user-icon', 'icon-size': 1.2 }
  });
}


⸻

Give the agent the main prompt above (the checklist style). It will know how to apply all changes and you can tell it to “patch, build, and deploy” after. If you want to further style or polish, just let me know!